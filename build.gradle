buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.sample.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Finchley.SR2'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	//implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
//	implementation('org.springframework.boot:spring-boot-starter-data-rest')
//	implementation('org.springframework.boot:spring-boot-starter-hateoas')
//    implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
//	implementation('org.springframework.boot:spring-boot-starter-webflux')
//	implementation('org.flywaydb:flyway-core')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
//	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
//	implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard')
//	implementation('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
//	implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('com.h2database:h2')
	compileOnly('org.projectlombok:lombok') 
	testImplementation('org.springframework.boot:spring-boot-starter-test')
//	testImplementation('io.projectreactor:reactor-test')
//	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
